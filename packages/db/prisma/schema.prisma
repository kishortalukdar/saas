generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = "postgresql://postgres:postgres@localhost:5432/postgres"
}

model AdminUser {
  id         String   @id @default(uuid())
  email      String   @unique
  password   String
  created_at DateTime @default(now())
}

/* model Tenant {
  id          String      @id @default(uuid())
  company_name String
  gstin_no     Float?     // or use Decimal if needed
  is_active    Boolean    @default(true)
  plan_id      String?
  plan         Plan?      @relation(fields: [plan_id], references: [id])
  created_at   DateTime   @default(now())
  users        User[]
  subscriptions Subscription[]
}

model User {
  id         String   @id @default(uuid())
  tenant_id  String
  tenant     Tenant   @relation(fields: [tenant_id], references: [id], onDelete: Cascade)
  email      String   @unique
  role       String   @default("admin")
  created_at DateTime @default(now())
}

model Plan {
  id             String          @id @default(uuid())
  name           String          @unique
  price          Decimal         @default(0.00)
  billing_cycle  String          @default("monthly")
  is_free        Boolean         @default(false)
  tenants        Tenant[]
  plan_features  PlanFeature[]
}

model Feature {
  id          String         @id @default(uuid())
  code        String         @unique
  description String?
  plan_features PlanFeature[]
}

model PlanFeature {
  id         String   @id @default(uuid())
  plan_id    String
  feature_id String
  enabled    Boolean  @default(false)
  value      String?

  plan    Plan    @relation(fields: [plan_id], references: [id], onDelete: Cascade)
  feature Feature @relation(fields: [feature_id], references: [id], onDelete: Cascade)

  @@unique([plan_id, feature_id])
}

model Subscription {
  id           String    @id @default(uuid())
  tenant_id    String
  plan_id      String?
  is_active    Boolean   @default(true)
  trial_start  DateTime?
  trial_end    DateTime?
  subscribed_at DateTime @default(now())

  tenant Tenant @relation(fields: [tenant_id], references: [id], onDelete: Cascade)
  plan   Plan?  @relation(fields: [plan_id], references: [id])
}*/